var BMapGLLib=window.BMapGLLib=BMapGLLib||{};(function(){var t=6370996.81;var a=BMapGLLib.GeoUtils=function(){};a.isPointInRect=function(t,a){if(!(t.toString()==="Point"||t.toString()==="LatLng")||!(a instanceof BMapGL.Bounds)){return false}var n=a.getSouthWest();var l=a.getNorthEast();return t.lng>=n.lng&&t.lng<=l.lng&&t.lat>=n.lat&&t.lat<=l.lat};a.isPointInCircle=function(t,n){if(!(t.toString()==="Point"||t.toString()==="LatLng")||!(n instanceof BMapGL.Circle)){return false}var l=n.getCenter();var e=n.getRadius();var r=a.getDistance(t,l);if(r<=e){return true}else{return false}};a.isPointOnPolyline=function(t,a){if(!(t.toString()==="Point"||t.toString()==="LatLng")||!(a instanceof BMapGL.Polyline)){return false}var n=a.getBounds();if(!this.isPointInRect(t,n)){return false}var l=a.getPath();for(var e=0;e<l.length-1;e++){var r=l[e];var i=l[e+1];if(t.lng>=Math.min(r.lng,i.lng)&&t.lng<=Math.max(r.lng,i.lng)&&t.lat>=Math.min(r.lat,i.lat)&&t.lat<=Math.max(r.lat,i.lat)){var o=(r.lng-t.lng)*(i.lat-t.lat)-(i.lng-t.lng)*(r.lat-t.lat);if(o<2e-9&&o>-2e-9){return true}}}return false};a.isPointInPolygon=function(t,a){if(!(t.toString()==="Point"||t.toString()==="LatLng")||!(a instanceof BMapGL.Polygon)){return false}var n=a.getBounds();if(!this.isPointInRect(t,n)){return false}var l=a.getPath();var e=l.length;var r=true;var i=0;var o=2e-10;var g,h;var f=t;g=l[0];for(var s=1;s<=e;++s){if(f.equals(g)){return r}h=l[s%e];if(f.lat<Math.min(g.lat,h.lat)||f.lat>Math.max(g.lat,h.lat)){g=h;continue}if(f.lat>Math.min(g.lat,h.lat)&&f.lat<Math.max(g.lat,h.lat)){if(f.lng<=Math.max(g.lng,h.lng)){if(g.lat==h.lat&&f.lng>=Math.min(g.lng,h.lng)){return r}if(g.lng==h.lng){if(g.lng==f.lng){return r}else{++i}}else{var M=(f.lat-g.lat)*(h.lng-g.lng)/(h.lat-g.lat)+g.lng;if(Math.abs(f.lng-M)<o){return r}if(f.lng<M){++i}}}}else{if(f.lat==h.lat&&f.lng<=h.lng){var u=l[(s+1)%e];if(f.lat>=Math.min(g.lat,u.lat)&&f.lat<=Math.max(g.lat,u.lat)){++i}else{i+=2}}}g=h}if(i%2==0){return false}else{return true}};a.degreeToRad=function(t){return Math.PI*t/180};a.radToDegree=function(t){return 180*t/Math.PI};function n(t,a,n){if(a!=null){t=Math.max(t,a)}if(n!=null){t=Math.min(t,n)}return t}function l(t,a,n){while(t>n){t-=n-a}while(t<a){t+=n-a}return t}a.getDistance=function(e,r){if(!(e.toString()==="Point"||e.toString()==="LatLng"||r.toString()==="Point"||r.toString()==="LatLng")){return 0}e.lng=l(e.lng,-180,180);e.lat=n(e.lat,-74,74);r.lng=l(r.lng,-180,180);r.lat=n(r.lat,-74,74);var i,o,g,h;i=a.degreeToRad(e.lng);g=a.degreeToRad(e.lat);o=a.degreeToRad(r.lng);h=a.degreeToRad(r.lat);return t*Math.acos(Math.sin(g)*Math.sin(h)+Math.cos(g)*Math.cos(h)*Math.cos(o-i))};a.getPolylineDistance=function(t){if(t instanceof BMapGL.Polyline||t instanceof Array){var n;if(t instanceof BMapGL.Polyline){n=t.getPath()}else{n=t}if(n.length<2){return 0}var l=0;for(var e=0;e<n.length-1;e++){var r=n[e];var i=n[e+1];var o=a.getDistance(r,i);l+=o}return l}else{return 0}};a.getPolygonArea=function(a){if(!(a instanceof BMapGL.Polygon)&&!(a instanceof Array)){return 0}var n;if(a instanceof BMapGL.Polygon){n=a.getPath()}else{n=a}if(n[0].equals(n[n.length-1])){n.pop()}if(n.length<3){return 0}var l=0;var e=0;var r=0;var i=0;var o=0;var g=0;var h=0;var f=0;var s=0;var M=0;var u=0;var v=0;var P=0;var c=0;var I=0;var L=0;var m=0;var p=0;var B=0;var d=0;var y=0;var G=0;var S=0;var x=0;var R=0;var T=0;var b=0;var D=0;var q=0;var w=0;var A=0;var C=0;var E=0;var N=0;var O=t;var U=n.length;for(var W=0;W<U;W++){if(W==0){e=n[U-1].lng*Math.PI/180;r=n[U-1].lat*Math.PI/180;i=n[0].lng*Math.PI/180;o=n[0].lat*Math.PI/180;g=n[1].lng*Math.PI/180;h=n[1].lat*Math.PI/180}else if(W==U-1){e=n[U-2].lng*Math.PI/180;r=n[U-2].lat*Math.PI/180;i=n[U-1].lng*Math.PI/180;o=n[U-1].lat*Math.PI/180;g=n[0].lng*Math.PI/180;h=n[0].lat*Math.PI/180}else{e=n[W-1].lng*Math.PI/180;r=n[W-1].lat*Math.PI/180;i=n[W].lng*Math.PI/180;o=n[W].lat*Math.PI/180;g=n[W+1].lng*Math.PI/180;h=n[W+1].lat*Math.PI/180}f=Math.cos(o)*Math.cos(i);s=Math.cos(o)*Math.sin(i);M=Math.sin(o);u=Math.cos(r)*Math.cos(e);v=Math.cos(r)*Math.sin(e);P=Math.sin(r);c=Math.cos(h)*Math.cos(g);I=Math.cos(h)*Math.sin(g);L=Math.sin(h);m=(f*f+s*s+M*M)/(f*u+s*v+M*P);p=(f*f+s*s+M*M)/(f*c+s*I+M*L);B=m*u-f;d=m*v-s;y=m*P-M;G=p*c-f;S=p*I-s;x=p*L-M;q=(G*B+S*d+x*y)/(Math.sqrt(G*G+S*S+x*x)*Math.sqrt(B*B+d*d+y*y));if(q<-1)q=-1;if(q>1)q=1;q=Math.acos(q);R=S*y-x*d;T=0-(G*y-x*B);b=G*d-S*B;if(f!=0)D=R/f;else if(s!=0)D=T/s;else D=b/M;if(D>0){w+=q;E++}else{A+=q;C++}}var j,k;j=w+(2*Math.PI*C-A);k=2*Math.PI*E-w+A;if(w>A){if(j-(U-2)*Math.PI<1)N=j;else N=k}else{if(k-(U-2)*Math.PI<1)N=k;else N=j}l=(N-(U-2)*Math.PI)*O*O;return l};a.isPolylineIntersectArea=function(t,n){let l=function(t,a,n,l){let e=t.lng,r=t.lat;let i=a.lng,o=a.lat;let g=n.lng,h=n.lat;let f=l.lng,s=l.lat;if(!(Math.min(e,i)<=Math.max(g,f)&&Math.min(h,s)<=Math.max(r,o)&&Math.min(g,f)<=Math.max(e,i)&&Math.min(r,o)<=Math.max(h,s)))return false;var M,u,v,P;M=(g-e)*(o-r)-(i-e)*(h-r);u=(f-e)*(o-r)-(i-e)*(s-r);v=(e-g)*(s-h)-(f-g)*(r-h);P=(i-g)*(s-h)-(f-g)*(o-h);return M*u<=2e-10&&v*P<=2e-10};if(!(t instanceof BMapGL.Polyline&&n instanceof BMapGL.Polygon)){console.error("参数出错,传入值非折线和多边形");return false}t=t.getPath().map(function(t){return{lng:t.lng,lat:t.lat}});n=n.getPath().map(function(t){return{lng:t.lng,lat:t.lat}});if(t.length<1||n.length<=2){console.error("参数出错,传入值非折线和多边形");return false}let e=[],r=[];for(let l=0;l<t.length;l++){if(a.isPointInPolygon(t[l],n)){return true}}for(let a=1;a<t.length;a++){e.push([t[a-1],t[a]])}for(let t=1;t<n.length;t++){r.push([n[t-1],n[t]])}r.push([n[n.length-1],n[0]]);for(let t=0;t<e.length;t++){for(let a=0;a<r.length;a++){if(l(e[t][0],e[t][1],r[a][0],r[a][1]))return true}}return false}})();